name: Docker Build and Push
description: Build docker image and push to registry

inputs:
  repository:
    description: The owner and repository name
    required: false
    default: ${{ github.repository }}
  token:
    description: ECR token
    required: true
  image:
    description: Docker image name
    required: false
  build_args:
    description: List of build-time variables
    required: false
  gh_access_token:
    description: GitHub access token
    required: true

outputs:
  image_repo:
    description: Docker image repository
    value: ${{ steps.image.outputs.repo }}
  image_tag:
    description: Docker image's tag
    value: ${{ steps.image.outputs.tag }}

runs:
  using: composite
  steps:
    - uses: kkp-dfs/dime-github-actions-workflows/common@main
      with:
        gh_access_token: ${{ inputs.gh_access_token }}
    - name: Generate .docker file
      shell: bash
      run: |
        mkdir -p ~/.docker
        cat > ~/.docker/config.json <<EOF
        {"auths":{"915060398631.dkr.ecr.ap-southeast-1.amazonaws.com":{"auth":"${{ inputs.token }}"}}}
        EOF
    
    - name: Set docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ inputs.image || inputs.repository }}
        tags: |
          type=ref,event=pr,suffix=-{{ date 'YYYYMMDD-HHmmss' }}
          type=ref,event=pr,suffix=-latest
          type=ref,event=branch,suffix=-{{ date 'YYYYMMDD-HHmmss' }}
          type=ref,event=branch

    - name: Build & push docker images
      uses: kkp-dfs/dime-github-actions-workflows/kaniko@main
      with:
        image: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build_args: ${{ inputs.build_args }}

    - id: image
      shell: bash
      run: |
        IMAGE=$(echo '${{ steps.meta.outputs.json }}' | jq -r '.tags[0]')
        echo "::set-output name=repo::$(echo $IMAGE | cut -d: -f1)"
        echo "::set-output name=tag::$(echo $IMAGE | cut -d: -f2)"
