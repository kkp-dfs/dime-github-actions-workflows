name: Unit test
description: Run unit test

inputs:
  application_name:
    description: Name of application
    required: true
  language:
    description: The program language of this repository
    required: true
  minimum_coverage:
    description: "The minimum coverage to pass the check. Optional. Default: `0` (always passes)"
    required: false
    default: "0"
  slack_channel:
    description: The slack channel that send notification.
    required: false
  slack_webhook:
    description: The slack webhook url
    required: true
  gh_access_token:
    description: GitHub access token
    required: true
  coverage_file:
    description: The coverage file
    required: false
    default: unitcoverage.lcov

runs:
  using: composite
  steps:
    - name: Run go unit test
      if: ${{ inputs.language == 'golang' }}
      shell: bash
      run: |
        export PATH=$HOME/go/bin:$(go env GOPATH)/bin:/go/bin:$PATH
        touch $HOME/.ack-ginkgo-rc
        make unit-test
        make generate-unitcoverage

    - name: Run node unit test
      if: ${{ inputs.language == 'node' }}
      shell: bash
      run: yarn test

    - name: Cache flutter package
      if: ${{ inputs.language == 'flutter' }}
      uses: actions/cache@v2
      with:
        path: |
          /opt/flutter/.pub-cache
          /runner/.pub-cache
        key: ${{ runner.os }}-${{ inputs.language }}-${{ inputs.repository }}-${{ hashFiles('**/pubspec.lock') }}
    - name: Run flutter unit test
      if: ${{ inputs.language == 'flutter' }}
      shell: bash
      run: make test

    - id: fail_message
      if: ${{ failure() }}
      shell: bash
      run: |
        echo "::set-output name=color::danger"
        echo "::set-output name=title::'${{ inputs.application_name }} unit test is FAIL'"
        echo "::set-output name=message::'Found some failed test cases'"

    - name: Create coverage report
      uses: zgosalvez/github-actions-report-lcov@v1
      with:
        coverage-files: ${{ inputs.coverage_file }}
        artifact-name: unittest-coverage-report
        github-token: ${{ inputs.gh_access_token }}
        minimum-coverage: ${{ inputs.minimum_coverage }}

    - id: success_coverage
      if: ${{ success() }}
      shell: bash
      run: |
        echo "::set-output name=color::good"
        echo "::set-output name=title::Test coverage of ${{ inputs.application_name }} is PASS"
        echo "::set-output name=message::Coverage rate is more than ${{ inputs.minimum_coverage }}%"

    - id: fail_coverage
      if: ${{ failure() }}
      shell: bash
      run: |
        echo "::set-output name=color::danger"
        echo "::set-output name=title::Test coverage of ${{ inputs.application_name }} is FAIL"
        echo "::set-output name=message::Coverage rate is less than ${{ inputs.minimum_coverage }}%"

    - name: Slack Notification
      if: ${{ always() }}
      uses: slackapi/slack-github-action@v1.18.0
      with:
        payload: |
          {
            "text": "${{ steps.fail_message.outputs.message || steps.fail_coverage.outputs.message || steps.success_coverage.outputs.message }}",
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "${{ steps.fail_message.outputs.title || steps.fail_coverage.outputs.title || steps.success_coverage.outputs.title }}"
                }
              },
              {
                "type": "context",
                "elements": [
                  {
                    "type": "image",
                    "image_url": "${{ github.event.sender.avatar_url }}",
                    "alt_text": "${{ github.event.sender.login }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "${{ github.event.sender.login }}"
                  }
                ]
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "${{ steps.fail_message.outputs.message || steps.fail_coverage.outputs.message || steps.success_coverage.outputs.message }}"
                }
              }
            ]
          }
      env:
        # SLACK_CHANNEL: ${{ inputs.slack_channel }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        SLACK_WEBHOOK_URL: ${{ inputs.slack_webhook }}
        # SLACK_USERNAME: GitHub Actions
        # SLACK_ICON: https://avatars.githubusercontent.com/u/90231066?s=200&v=4
        # SLACK_COLOR: ${{ steps.fail_message.outputs.color || steps.fail_coverage.outputs.color || steps.success_coverage.outputs.color }}
        # SLACK_TITLE: ${{ steps.fail_message.outputs.title || steps.fail_coverage.outputs.title || steps.success_coverage.outputs.title }}
        # SLACK_MESSAGE: ${{ steps.fail_message.outputs.message || steps.fail_coverage.outputs.message || steps.success_coverage.outputs.message }}
