name: Dime Golang CI

on:
  workflow_call:
    inputs:
      repository:
        description: The owner and repository name
        required: true
        type: string
      base_ref:
        description: The branch or tag ref or commit SHA that be base code.
        required: true
        type: string
      target_ref:
        description: The branch or tag ref or commit SHA that will be merged to base code.
        required: true
        type: string
    secrets:
      gh_access_token:
        required: true

jobs:
  setup:
    name: Install dependencies and keep caches
    runs-on: ubuntu-latest
    env: 
      GOPRIVATE: github.com/kkp-dfs/*
    steps:
      - name: Checkout and merge PR to base branch
        uses: kkp-dfs/dime-github-actions-workflows/merge-test-pr@main
        with:
          repository: ${{ inputs.repository }}
          base_ref: ${{ inputs.base_ref }}
          target_ref: ${{ inputs.target_ref }}
          gh_access_token: ${{ secrets.gh_access_token }}

      - name: Set up go version and caches
        uses: kkp-dfs/dime-github-actions-workflows/golang-setup@main

      - name: Install go modules
        run: |
          make tidy
          make tools-install

  unit-test:
    name: Run unit testing
    needs: setup
    runs-on: ubuntu-latest
    env: 
      GOPRIVATE: github.com/kkp-dfs/*
    steps:
      - name: Checkout and merge PR to base branch
        uses: kkp-dfs/dime-github-actions-workflows/merge-test-pr@main
        with:
          repository: ${{ inputs.repository }}
          base_ref: ${{ inputs.base_ref }}
          target_ref: ${{ inputs.target_ref }}
          gh_access_token: ${{ secrets.gh_access_token }}

      - name: Set up go version and caches
        uses: kkp-dfs/dime-github-actions-workflows/golang-setup@main

      - name: Run test-cases
        run: |
          make unit-test
          make generate-unitcoverage

      - name: Create coverage report
        uses: zgosalvez/github-actions-report-lcov@v1
        with:
          coverage-files: unitcoverage.lcov
          minimum-coverage: 80
          artifact-name: unittest-coverage-report
          github-token: ${{ secrets.gh_access_token }}

  integration-test:
    name: Run integration test
    needs: setup
    runs-on: ubuntu-latest
    env: 
      GOPRIVATE: github.com/kkp-dfs/*
    steps:
      - name: Checkout and merge PR to base branch
        uses: kkp-dfs/dime-github-actions-workflows/merge-test-pr@main
        with:
          repository: ${{ inputs.repository }}
          base_ref: ${{ inputs.base_ref }}
          target_ref: ${{ inputs.target_ref }}
          gh_access_token: ${{ secrets.gh_access_token }}

      - name: Set up go version and caches
        uses: kkp-dfs/dime-github-actions-workflows/golang-setup@main

      - name: Run test-cases
        run: |
          make integration-test
          make generate-intcoverage

      - name: Create coverage report
        uses: zgosalvez/github-actions-report-lcov@v1
        with:
          coverage-files: integrationcoverage.lcov
          minimum-coverage: 60
          artifact-name: integation-coverage-report
          github-token: ${{ secrets.GH_ACCESS_TOKEN }}

  build:
    name: Build & push docker images to registry
    needs: [unit-test]
    runs-on: [self-hosted, linux]
    steps:
      - name: Checkout and merge PR to base branch
        uses: kkp-dfs/dime-github-actions-workflows/merge-test-pr@main
        with:
          repository: ${{ inputs.repository }}
          base_ref: ${{ inputs.base_ref }}
          target_ref: ${{ inputs.target_ref }}
          gh_access_token: ${{ secrets.gh_access_token }}

      - name: Build and push docker image
        uses: kkp-dfs/dime-github-actions-workflows/docker-build-push@main
        with:
          repository: ${{ inputs.repository }}