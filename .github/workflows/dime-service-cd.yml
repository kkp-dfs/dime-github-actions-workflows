name: Dime Service Continuous Delivery

on:
  workflow_call:
    inputs:
      environment:
        description: Environment that would like to deploy services
        required: true
        default: sit
        type: string
      release_name:
        description: Release name of service
        required: true
        type: string
      application_name:
        description: Name of application
        required: true
        type: string
      application_endpoints:
        description: Endpoints of application
        required: true
        type: string
      ref:
        description: commit reference of repository
        required: false
        type: string
        default: main
      image_repository:
        description: Docker image repository
        required: true
        type: string
      image_tag:
        description: Docker image tag
        required: true
        type: string

    secrets:
      gh_access_token:
        required: true

jobs:
  credentials:
    name: Get ECR credentials
    runs-on: [self-hosted, linux]
    outputs:
      ecr_username: ${{ steps.ecr.outputs.username }}
      ecr_password: ${{ steps.ecr.outputs.password }}
    steps:
      - name: Get ECR login password
        id: ecr
        run: |
          TOKEN=$(aws ecr get-authorization-token --region ap-southeast-1 --output text \
          --query 'authorizationData[].authorizationToken' | base64 -d)
          echo "::add-mask::$TOKEN"
          echo "::set-output name=username::$(echo $TOKEN | cut -d: -f1)"
          echo "::set-output name=password::$(echo $TOKEN | cut -d: -f2)"

  argocd:
    name: Apply argo application to kubernetes cluster
    needs: credentials
    runs-on: [self-hosted, linux, deployment]
    container:
      image: 915060398631.dkr.ecr.ap-southeast-1.amazonaws.com/kkp-dfs/ubuntu:20.04
      credentials:
        username: ${{ needs.credentials.outputs.ecr_username }}
        password: ${{ needs.credentials.outputs.ecr_password }}
    steps:
      - name: Checkout Dime helm repository
        run: |
          cat <<EOF > ~/.netrc
          machine github.com
            login ${{ secrets.gh_access_token }}
            password x-oauth-basic
          EOF
          git clone https://github.com/kkp-dfs/dime-helm.git
          cd dime-helm
          git reset ${{ inputs.ref }} --hard

      - name: Apply Dime ArgoCD Application Helm
        run: |
          export APISERVER=https://kubernetes.default.svc
          export SERVICEACCOUNT=/var/run/secrets/kubernetes.io/serviceaccount
          ls -la /var/run/secrets
          ls -la /var/run/secrets/kubernetes.io
          export NAMESPACE=$(cat ${SERVICEACCOUNT}/namespace)
          export TOKEN=$(cat ${SERVICEACCOUNT}/token)
          export CACERT=${SERVICEACCOUNT}/ca.crt
          curl -v --cacert ${CACERT} --header "Authorization: Bearer ${TOKEN}" -X GET ${APISERVER}/api

          helm template ${{ inputs.release_name }} dime-helm/charts/dime-application \
          -f dime-helm/values/${{ inputs.application_name }}/values.yaml \
          -f dime-helm/values/${{ inputs.application_name }}/values-${{ inputs.environment }}.yaml \
          --set "source.username=${{ secrets.gh_access_token }}" \
          --set "source.password=x-oauth-basic" \
          --set "destination.cluster=${{ inputs.environment }}" \
          --set "application.values.virtualService.hosts={${{ inputs.application_endpoints }}}" \
          --set "application.values.image.repository=${{ inputs.image_repository }}" \
          --set "application.values.image.tag=${{ inputs.image_tag }}" | kubectl apply -f --