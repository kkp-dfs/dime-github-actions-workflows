name: Dime App workflow

on:
  workflow_call:
    inputs:
      application_name:
        description: Name of application
        required: true
        type: string
      repository:
        description: The owner and repository name
        required: false
        type: string
        default: ${{ github.repository }}
      base_ref:
        description: The branch or tag ref or commit SHA that be base code.
        required: false
        type: string
        default: ${{ github.base_ref || 'main' }}
      target_ref:
        description: The branch or tag ref or commit SHA that will be merged to base code.
        required: false
        type: string
        default: ${{ github.head_ref || github.ref_name }}
      slack_channel:
        description: The slack channel that send notification.
        type: string
        required: true

    secrets:
      gh_access_token:
        required: true
      slack_webhook:
        required: true

jobs:
  setup:
    name: Install dependencies and keep caches
    runs-on: [self-hosted, linux, main]
    outputs:
      ecr_username: ${{ steps.ecr.outputs.username }}
      ecr_password: ${{ steps.ecr.outputs.password }}
    steps:
      - uses: kkp-dfs/dime-github-actions-workflows/lang-setup@revise-pr
        with:
          language: flutter
          repository: ${{ inputs.repository }}
          base_ref: ${{ inputs.base_ref }}
          target_ref: ${{ inputs.target_ref }}
          go_version: ${{ inputs.go-version }}
          node_version: ${{ inputs.node-version }}
          gh_access_token: ${{ secrets.gh_access_token }}
      - name: Get ECR information
        id: ecr
        uses: kkp-dfs/dime-github-actions-workflows/get-ecr-info@revise-pr

  analyze:
    name: Run analyze
    needs: setup
    runs-on: [self-hosted, linux, main]
    continue-on-error: true
    steps:
      - uses: kkp-dfs/dime-github-actions-workflows/lang-setup@revise-pr
        with:
          language: flutter
          repository: ${{ inputs.repository }}
          base_ref: ${{ inputs.base_ref }}
          target_ref: ${{ inputs.target_ref }}
          go_version: ${{ inputs.go-version }}
          node_version: ${{ inputs.node-version }}
          gh_access_token: ${{ secrets.gh_access_token }}
      - uses: kkp-dfs/dime-github-actions-workflows/lint@revise-pr
        with:
          language: flutter
          application_name: ${{ inputs.application_name }}
          slack_channel: ${{ inputs.slack_channel }}
          slack_webhook: ${{ inputs.slack_webhook }}

  unit-test:
    name: Run unit testing
    needs: setup
    runs-on: [self-hosted, linux, main]
    continue-on-error: true
    container:
      image: 915060398631.dkr.ecr.ap-southeast-1.amazonaws.com/flutter:2.8.1-stable
      credentials:
        username: ${{ needs.setup.outputs.ecr_username }}
        password: ${{ needs.setup.outputs.ecr_password }}
      volumes:
        - /var/run/secrets/kubernetes.io/serviceaccount:/var/run/secrets/kubernetes.io/serviceaccount
    steps:
      - uses: kkp-dfs/dime-github-actions-workflows/lang-setup@revise-pr
        with:
          language: flutter
          repository: ${{ inputs.repository }}
          base_ref: ${{ inputs.base_ref }}
          target_ref: ${{ inputs.target_ref }}
          go_version: ${{ inputs.go-version }}
          node_version: ${{ inputs.node-version }}
          gh_access_token: ${{ secrets.gh_access_token }}
      - name: Generate environment secret file
        run: |
          JWT=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
          echo "{\"role\":\"kubernetes-actions-runner\",\"jwt\":\"$JWT\"}" > payload.json
          TOKEN=$(curl -d @payload.json https://vault.mydime.tech/v1/auth/kubernetes/actions-runner/main/login | jq -r '.auth.client_token')
          DATA=$(curl -H "X-VAULT-TOKEN:$TOKEN" https:/vault.mydime.tech/v1/secrets/data/services/dime-app/testing)

          export DIRECTUS_ACCESS_TOKEN=$(echo $DATA | jq -r ".data.data.DIRECTUS_ACCESS_TOKEN")
          export PASSWORD_HASHING_SALT=$(echo $DATA | jq -r ".data.data.PASSWORD_HASHING_SALT")
          export SECURE_ED25519_PUBLIC_KEY=$(echo $DATA | jq -r ".data.data.SECURE_ED25519_PUBLIC_KEY")
          export SECURE_RSA_PUBLIC_KEY=$(echo $DATA | jq -r ".data.data.SECURE_RSA_PUBLIC_KEY")
          export SIGN_IN_RSA_PUBLIC_KEY=$(echo $DATA | jq -r ".data.data.SIGN_IN_RSA_PUBLIC_KEY")
          export PATH=/opt/flutter/bin:$PATH

          envsubst < environment_secret_template.yaml > environment_secret.yaml
          make gen-config-sit
      - uses: kkp-dfs/dime-github-actions-workflows/unit-test@revise-pr
        with:
          language: flutter
          minimum_coverage: 80
          application_name: ${{ inputs.application_name }}
          slack_webhook: ${{ secrets.slack_webhook }}
          slack_channel: ${{ inputs.slack_channel }}
